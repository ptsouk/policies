{
  "mode": "Indexed",
  "policyRule": {
    "if": {
      "allOf": [
        {
          "field": "type",
          "equals": "Microsoft.HybridCompute/machines"
        },
        {
          "field": "Microsoft.HybridCompute/machines/osName",
          "equals": "Windows"
        },
        {
          "field": "location",
          "in": [
            "australiacentral",
            "australiaeast",
            "australiasoutheast",
            "brazilsouth",
            "canadacentral",
            "canadaeast",
            "centralindia",
            "centralus",
            "eastasia",
            "eastus",
            "eastus2",
            "eastus2euap",
            "francecentral",
            "germanywestcentral",
            "japaneast",
            "japanwest",
            "jioindiawest",
            "koreacentral",
            "koreasouth",
            "northcentralus",
            "northeurope",
            "norwayeast",
            "southafricanorth",
            "southcentralus",
            "southeastasia",
            "southindia",
            "swedencentral",
            "switzerlandnorth",
            "uaenorth",
            "uksouth",
            "ukwest",
            "westcentralus",
            "westeurope",
            "westindia",
            "westus",
            "westus2",
            "westus3"
          ]
        },
        {
          "field": "[concat('tags[', parameters('inclusionTagName'), ']')]",
          "in": "[parameters('inclusionTagValue')]"
        }
      ]
    },
    "then": {
      "effect": "[parameters('effect')]",
      "details": {
        "type": "Microsoft.HybridCompute/machines/extensions",
        "roleDefinitionIds": [
          "/providers/Microsoft.Authorization/roleDefinitions/cd570a14-e51a-42ad-bac8-bafd67325302"
        ],
        "existenceCondition": {
          "allOf": [
            {
              "field": "Microsoft.HybridCompute/machines/extensions/type",
              "equals": "AzureMonitorWindowsAgent"
            },
            {
              "field": "Microsoft.HybridCompute/machines/extensions/publisher",
              "equals": "Microsoft.Azure.Monitor"
            },
            {
              "field": "Microsoft.HybridCompute/machines/extensions/enableAutomaticUpgrade",
              "equals": true
            },
            {
              "field": "Microsoft.HybridCompute/machines/extensions/provisioningState",
              "equals": "Succeeded"
            }
          ]
        },
        "deployment": {
          "properties": {
            "mode": "incremental",
            "template": {
              "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
              "contentVersion": "1.0.0.0",
              "parameters": {
                "vmName": {
                  "type": "string"
                },
                "location": {
                  "type": "string"
                },
                "proxyAddress": {
                  "type": "string"
                }
              },
              "variables": {
                "extensionName": "AzureMonitorWindowsAgent",
                "extensionPublisher": "Microsoft.Azure.Monitor",
                "extensionType": "AzureMonitorWindowsAgent"
              },
              "resources": [
                {
                  "name": "[concat(parameters('vmName'), '/', variables('extensionName'))]",
                  "type": "Microsoft.HybridCompute/machines/extensions",
                  "location": "[parameters('location')]",
                  "apiVersion": "2022-11-10",
                  "properties": {
                    "publisher": "[variables('extensionPublisher')]",
                    "type": "[variables('extensionType')]",
                    "autoUpgradeMinorVersion": true,
                    "enableAutomaticUpgrade": true,
                    "settings": {
                      "proxy": {
                        "address": "[parameters('proxyAddress')]",
                        "mode": "application",
                        "auth": "false"
                      }
                    }
                  }
                }
              ]
            },
            "parameters": {
              "vmName": {
                "value": "[field('name')]"
              },
              "location": {
                "value": "[field('location')]"
              },
              "proxyAddress": {
                "value": "[parameters('proxyAddress')]"
              }
            }
          }
        }
      }
    }
  },
  "parameters": {
    "effect": {
      "type": "String",
      "metadata": {
        "displayName": "Effect",
        "description": "Enable or disable the execution of the policy."
      },
      "allowedValues": [
        "DeployIfNotExists",
        "Disabled"
      ],
      "defaultValue": "DeployIfNotExists"
    },
    "proxyAddress": {
      "type": "String",
      "metadata": {
        "displayName": "proxyAddress",
        "description": "Set the proxy Address to use. Example: http://[address]:[port]"
      }
    },
    "inclusionTagName": {
      "type": "String",
      "metadata": {
        "displayName": "Inclusion Tag Name",
        "description": "Name of the tag to use for including VMs in the scope of this policy. This should be used along with the Inclusion Tag Value parameter."
      },
      "defaultValue": ""
    },
    "inclusionTagValue": {
      "type": "Array",
      "metadata": {
        "displayName": "Inclusion Tag Values",
        "description": "Value of the tag to use for including VMs in the scope of this policy (in case of multiple values, use a comma-separated list). This should be used along with the Inclusion Tag Name parameter."
      }
    }
  }
}